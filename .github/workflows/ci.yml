name: CI

on:
  push:
  pull_request:

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run test
        run: cargo test --no-default-features --features pyo3/auto-initialize
      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --no-sdist -o dist
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run test
        run: cargo test --no-default-features --features pyo3/auto-initialize
      - uses: messense/maturin-action@v1
        with:
          command: build
          # no --universal2 as hdf5-sys lib can't build across different arch
          args: --release --no-sdist -o dist
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run test
        run: cargo test --no-default-features --features pyo3/auto-initialize
      - uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release -o dist
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/master')"
    needs: [macos, windows, linux]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *

  linux-cross:
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-gnu
            image: quay.io/pypa/manylinux2014_aarch64:latest
            platform: linux/arm64/v8
            arch: aarch64
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/heads/dev-ci')"
    steps:
      - uses: actions/checkout@v3
      - name: setup qemu
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: build
        run: |
          docker run --rm -w /project -v $(pwd):/project \
            -e PYTHON_HOMES=$PYTHON_HOMES -e CARGO_NET_GIT_FETCH_WITH_CLI=true \
            --platform ${{ matrix.platform.platform }} ${{ matrix.platform.image }} \
            bash /project/.github/workflows/build.sh -t ${{ matrix.platform.target }}
        env:
          PYTHON_HOMES: /opt/python
